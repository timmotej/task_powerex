name: Deploy terraform backend and infrastructure S3 ECR

on:
  workflow_run:
    workflows: [Test images locally before deployment to production,Build terraform backend and save its state to s3]
    types: [completed]

jobs:
  update_backend_aws:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.name != 'Build terraform backend and save its state to s3' }}
    steps:
      - uses: actions/checkout@v4
      - name: Deploy backend structure to AWS
        run: |
          echo 'The triggering workflow passed'
          docker build -t terraform_backend \
            --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            --build-arg "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            --build-arg AWS_REGION=${{ secrets.AWS_REGION }} \
            --build-arg MODULE=backend terraform
          docker run -t \
            -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            -e "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -e AWS_REGION=${{ secrets.AWS_REGION }} \
            terraform_backend apply -auto-approve -input=false -json

  deploy_s3_ecr_to_aws:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v4
      - name: Deploy S3 and ECR for lambda to AWS
        run: |
          echo 'The triggering workflow passed'
          docker build -t terraform_infrastructure \
            --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            --build-arg "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            --build-arg AWS_REGION=${{ secrets.AWS_REGION }} \
            --build-arg MODULE=infrastructure terraform
          docker run -t \
            -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            -e "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -e AWS_REGION=${{ secrets.AWS_REGION }} \
            terraform_infrastructure apply -auto-approve -input=false -json
  fail_on_failure_previous_workflow:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - uses: actions/github-script@v7
        with:
          script: core.setFailed('Failed previous workflow')
