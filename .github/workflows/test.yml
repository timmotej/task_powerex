name: Test images locally before deployment to production

on:
  push:
    branches:
      - "!main"
    tags:
      - "!([0-9]+.)*[0-9]+"

jobs:
  test_builds_locally:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build and test lambda Docker image locally
        run: |
          docker build lambda --file lambda/lambda.Dockerfile --tag lambda-local:test
          docker run -d --name lambda-local -p 9000:8080 lambda-local:test
          docker ps -a
          sleep 5
          curl -XPOST "http://localhost:9000/2015-03-31/functions/function/invocations" -d '{"Records": [{"eventVersion": "2.0", "eventSource": "aws:s3", "awsRegion": "us-west-2", "eventTime": "1970-01-01T00:00:00.000Z", "eventName": "ObjectCreated:Put", "userIdentity": {"principalId": "EXAMPLE"}, "requestParameters": {"sourceIPAddress": "127.0.0.1"}, "responseElements": {"x-amz-request-id": "EXAMPLE123456789", "x-amz-id-2": "EXAMPLE123/5678abcdefghijklambdaisawesome/mnopqrstuvwxyzABCDEFGH"}, "s3": {"s3SchemaVersion": "1.0", "configurationId": "testConfigRule", "bucket": {"name": "bucket_powerex_files_input", "ownerIdentity": {"principalId": "EXAMPLE"}, "arn": "arn:aws:s3:::example-bucket"}, "object": {"key": "HappyFace.jpg", "size": 1024, "eTag": "0123456789abcdef0123456789abcdef", "sequencer": "0A1B2C3D4E5F678901"}}, "test": "True"}]}'
          docker ps -a
          docker logs lambda-local
          docker stop lambda-local
          docker rm lambda-local

      - name: Build and test terraform Docker image locally with build-args
        run: |
          docker build -t terraform_infrastructure \
            --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            --build-arg "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            --build-arg AWS_REGION=${{ secrets.AWS_REGION }} \
            --build-arg MODULE=infrastructure terraform
          docker run -t \
            -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            -e "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -e AWS_REGION=${{ secrets.AWS_REGION }} \
            --entrypoint /bin/cat \
            terraform_infrastructure main.tf
          docker build -t terraform_lambda \
            --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            --build-arg "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            --build-arg AWS_REGION=${{ secrets.AWS_REGION }} \
            --build-arg MODULE=lambda terraform
          docker run -t \
            -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            -e "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -e AWS_REGION=${{ secrets.AWS_REGION }} \
            --entrypoint /bin/cat \
            terraform_lambda main.tf
