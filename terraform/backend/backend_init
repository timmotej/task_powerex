terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 4.27.0"
    }
  }

  required_version = ">= 1.2.0"
}

provider "aws" {}

locals {
  tf_s3_bucket_name              = "backend-s3-tf-bucket"
  aws_region                     = var.aws_region
  terraform_dynamodb_locks_table = "terraform-up-and-running-locks"
}

resource "aws_iam_policy" "terraform_s3_running_state_policy" {
  name        = "terraform_s3_running_state_policy"
  description = "Terraform managed policy to create and managed s3 bucket with running tfstate"

  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = [
          "s3:ListBucket"
        ]
        Effect   = "Allow"
        Resource = "*"
        Sid      = "policyTerraformStateS3Bucket"
      },
    ]
  })
}

resource "aws_iam_role" "terraform_backend_role" {
  name = "terraform_backend_s3_role"
  path = "/"
  decription = "Terraform managed role for s3 backend"

  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = "sts:AssumeRole"
        Effect = "Allow"
        Sid    = "roleTerraformStateS3Bucket"
        Principal = {
          Service = "s3.amazonaws.com"
        }
      },
    ]
  })
  managed_policy_arns = [aws_iam_policy.terraform_s3_running_state_policy.arn]

}

resource "aws_s3_bucket" "terraform_state" {
  bucket = local.tf_s3_bucket_name
  versioning {
    enabled = true
  }
}

resource aws_s3_bucket_server_side_encryption_configuration "terraform_state_bucket_encryption" {
  bucket = aws_s3_bucket.terraform_state.bucket
  rule {
    apply_server_side_encryption_by_default {
      sse_algorithm = "AES256"
    }
  }
}

resource "aws_dynamodb_table" "terraform_locks" {
  name         = local.terraform_dynamodb_locks_table
  billing_mode = "PAY_PER_REQUEST"
  hash_key     = "LockID"
  attribute {
    name = "LockID"
    type = "S"
  }
}

output "tf_bucket_arn" {
  value = aws_s3_bucket.terraform_state.arn
}

output "dynamodb_table_name" {
  value       = aws_dynamodb_table.terraform_locks.name
  description = "The name of the DynamoDB table"
}
